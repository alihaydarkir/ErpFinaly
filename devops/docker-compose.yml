services:
  postgres:
    image: pgvector/pgvector:pg14
    container_name: erp_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?Database password required}
      POSTGRES_DB: ${DB_NAME:-erp_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: erp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: ../devops/Dockerfile.backend
    container_name: erp_backend
    ports:
      - "5001:5000"
    environment:
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:?Database password required}@postgres:5432/${DB_NAME:-erp_db}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:?Database password required}
      DB_NAME: ${DB_NAME:-erp_db}
      REDIS_URL: redis://redis:6379
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-http://host.docker.internal:11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-llama2}
      JWT_SECRET: ${JWT_SECRET:?JWT secret required - must be 32+ characters}
      JWT_EXPIRY: ${JWT_EXPIRY:-15m}
      JWT_REFRESH_EXPIRY: ${JWT_REFRESH_EXPIRY:-7d}
      PORT: 5000
      NODE_ENV: ${NODE_ENV:-production}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5000}
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      AI_MAX_CONTEXT: 2000
      RAG_TOP_K: 5
      RAG_THRESHOLD: 0.7
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    # volumes:
    #   - ../backend:/app
    #   - backend_node_modules:/app/node_modules
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: ../devops/Dockerfile.frontend
    container_name: erp_frontend
    ports:
      - "5000:80"
    environment:
      VITE_API_URL: http://localhost:5001
      VITE_API_TIMEOUT: 30000
      VITE_SOCKET_URL: http://localhost:5001
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_node_modules:

